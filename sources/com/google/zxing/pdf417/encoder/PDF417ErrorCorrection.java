package com.google.zxing.pdf417.encoder;

import androidx.constraintlayout.core.motion.utils.TypedValues;
import com.autonavi.gbl.map.layer.model.LayerPriorityType;
import com.autonavi.gbl.pos.model.LocTrafficSignType;
import com.autonavi.gbl.route.model.RouteControlKey;
import com.autonavi.gbl.user.behavior.model.ConfigKey;
import com.google.zxing.WriterException;
import com.google.zxing.pdf417.PDF417Common;
import com.xiaopeng.montecarlo.bean.traffic.CruiseTrafficEventType;
import com.xiaopeng.montecarlo.navcore.event.SpeechNaviEvent;
import com.xiaopeng.montecarlo.navcore.search.SearchResultCode;
import com.xiaopeng.montecarlo.navcore.util.BLParams;
import com.xiaopeng.montecarlo.navcore.util.MarkUtils;
import com.xiaopeng.montecarlo.scenes.routescene.routechargeplan.decorator.RouteChargeDecorator;
import com.xiaopeng.montecarlo.views.volumn.seekbar.VerticalSeekBar;
import org.apache.commons.compress.archivers.tar.TarConstants;
import org.objectweb.asm.Opcodes;
import org.tukaani.xz.LZMA2Options;
/* loaded from: classes2.dex */
final class PDF417ErrorCorrection {
    private static final int[][] EC_COEFFICIENTS = {new int[]{27, 917}, new int[]{BLParams.GuideOverlayTypeTurnArrow, 568, 723, 809}, new int[]{LocTrafficSignType.LOC_TRAFFIC_SIGN_MIN_SPEED_LIMIT, 308, 436, MarkUtils.MARKER_ID_CAR_DIRECTION_LIGHT, 646, 653, 428, 379}, new int[]{274, 562, LocTrafficSignType.LOC_TRAFFIC_SIGN_NO_PARKING_AREA, 755, 599, 524, CruiseTrafficEventType.CRUISE_TRAFFIC_POLICE_VIOLATION, 132, MarkUtils.MARKER_ID_CAR_NAVIGATION_IN_CROSS, 116, 442, 428, MarkUtils.MARKER_ID_CAR_NAVIGATION_IN_CROSS, 42, Opcodes.ARETURN, 65}, new int[]{361, 575, 922, 525, Opcodes.ARETURN, 586, 640, 321, 536, 742, 677, 742, 687, MarkUtils.MARKER_ID_CAR_DIRECTION_LIGHT, Opcodes.INSTANCEOF, 517, LZMA2Options.NICE_LEN_MAX, MarkUtils.MARKER_ID_ROUTE_CHARGE_SELECT_LAST_REACHABLE, TarConstants.VERSION_OFFSET, 147, 593, 800, 571, 320, 803, 133, LocTrafficSignType.LOC_TRAFFIC_SIGN_CUSTOMS, 390, 685, 330, 63, SpeechNaviEvent.SPEECH_SWITCH_MAP_MODE}, new int[]{539, TypedValues.Cycle.TYPE_CUSTOM_WAVE_SHAPE, 6, 93, 862, BLParams.RouteOverlayGuide, 453, 106, 610, MarkUtils.MARKER_ID_RECOMMEND_PARK_1, 107, 505, 733, 877, 381, 612, 723, 476, 462, Opcodes.IRETURN, 430, 609, 858, 822, 543, 376, 511, 400, 672, 762, MarkUtils.MARKER_ID_SEARCH_CHARGE_FOCUS, Opcodes.INVOKESTATIC, 440, 35, BLParams.GuideOverlayTypePathBoard, 31, 460, 594, LocTrafficSignType.LOC_TRAFFIC_SIGN_MAXIMUN_WIDTH, BLParams.GuideOverlayTypeETAEvent, 517, 352, 605, 158, 651, 201, MarkUtils.MARKER_ID_RECOMMEND_CHARGE_AROUND_SLOW, 502, 648, 733, 717, 83, 404, 97, 280, BLParams.RouteOverlayGuide, 840, 629, 4, 381, 843, 623, SearchResultCode.G_ERR_HMI_NULL, 543}, new int[]{521, 310, 864, 547, 858, 580, MarkUtils.MARKER_ID_TIE_1, 379, 53, BLParams.RouteOverlayRangeOnMap, 897, 444, 400, 925, 749, 415, 822, 93, 217, 208, PDF417Common.MAX_CODEWORDS_IN_BARCODE, 244, 583, 620, 246, 148, MarkUtils.MARKER_ID_SEARCH_AROUNT_POI_CENTER_NIGHT, 631, MarkUtils.MARKER_ID_RECOMMEND_PARK_FOCUS_3, 908, MarkUtils.MARKER_ID_CAR_EAGLEYE_END, 704, 516, 258, 457, 907, 594, 723, 674, MarkUtils.MARKER_ID_RECOMMEND_PARK_FOCUS_3, 272, 96, 684, 432, 686, 606, 860, 569, Opcodes.INSTANCEOF, LocTrafficSignType.LOC_TRAFFIC_SIGN_NO_U_TURN, 129, Opcodes.INVOKEDYNAMIC, LocTrafficSignType.LOC_TRAFFIC_SIGN_MAX_SPEED_LIMIT, MarkUtils.MARKER_ID_RECOMMEND_PARK_1, 192, BLParams.RouteOverlayTrafficBlockTips, 278, Opcodes.LRETURN, 40, 379, 712, 463, 646, BLParams.RouteOverlayTrafficJamTips, Opcodes.LOOKUPSWITCH, MarkUtils.MARKER_ID_ROUTE_CHARGE_LAST_REACHABLE, MarkUtils.MARKER_ID_TIE_2, 763, 156, 732, 95, VerticalSeekBar.ROTATION_ANGLE_CW_270, MarkUtils.MARKER_ID_SEARCH_AROUNT_POI_CENTER_NIGHT, 90, 507, 48, LocTrafficSignType.LOC_TRAFFIC_SIGN_AXLE_WEIGTH_LIMIT, 821, 808, 898, 784, 663, 627, RouteControlKey.RouteControlConfigSetTipsInfo, 382, BLParams.CruiseOverlayTypeCamera, 380, 602, 754, LocTrafficSignType.LOC_TRAFFIC_SIGN_CARRIAGEWAY, 89, ConfigKey.ConfigKeyStartNaviGreet, 87, 432, 670, 616, 157, 374, 242, 726, 600, SearchResultCode.G_ERR_NOLOGIN, RouteControlKey.RouteControlKeySetLongDistInfo, 898, 845, RouteControlKey.RouteControlCustomSource, 354, 130, 814, 587, 804, 34, 211, 330, 539, MarkUtils.MARKER_ID_TIE_2, 827, 865, 37, 517, 834, 315, MarkUtils.MARKER_ID_YONG_DU_RIGHT, 86, CruiseTrafficEventType.CRUISE_TRAFFIC_POLICE_VIOLATION, 4, 108, 539}, new int[]{524, 894, 75, 766, 882, 857, 74, 204, 82, 586, 708, 250, 905, 786, 138, 720, 858, Opcodes.MONITORENTER, 311, 913, 275, Opcodes.ARRAYLENGTH, RouteControlKey.RouteControlKeySetLongDistInfo, 850, 438, 733, Opcodes.MONITORENTER, 280, 201, 280, 828, 757, 710, 814, 919, 89, 68, 569, 11, 204, 796, 605, 540, 913, CruiseTrafficEventType.CRUISE_TRAFFIC_POLICE_VIOLATION, 700, 799, 137, 439, 418, 592, 668, 353, 859, 370, 694, LocTrafficSignType.LOC_TRAFFIC_SIGN_U_TURN_LANE, RouteChargeDecorator.TYPE_SELECTED_KEEPER, 216, 257, MarkUtils.MARKER_ID_CAR_DIRECTION_LIGHT, MarkUtils.MARKER_ID_YONG_DU_LEFT, 209, 884, 315, 70, LocTrafficSignType.LOC_TRAFFIC_SIGN_MOTOR_VEHICLES, 793, MarkUtils.MARKER_ID_CAR_EAGLEYE_END, 274, 877, 162, 749, 812, 684, 461, LocTrafficSignType.LOC_TRAFFIC_SIGN_PARKING_SPACE, 376, 849, 521, 307, MarkUtils.MARKER_ID_RECOMMEND_PARK_FOCUS_2, 803, 712, 19, MarkUtils.MARKER_ID_BUBBLE_PASSED_VIA_CHARGE, 399, 908, 103, 511, 51, 8, 517, LocTrafficSignType.LOC_TRAFFIC_SIGN_MAXIMUN_WIDTH, MarkUtils.MARKER_ID_RECOMMEND_PARK_3, 470, 637, 731, 66, 255, 917, SearchResultCode.G_ERR_NOLOGIN, 463, 830, 730, 433, 848, 585, 136, MarkUtils.MARKER_ID_LANE_TURN, TypedValues.Custom.TYPE_REFERENCE, 90, 2, MarkUtils.MARKER_ID_RECOMMEND_PARK_FOCUS_1, 743, Opcodes.IFNONNULL, 655, 903, LocTrafficSignType.LOC_TRAFFIC_SIGN_MOTOR_VEHICLES, 49, CruiseTrafficEventType.CRUISE_TRAFFIC_POLICE_DRUNK, 580, 355, 588, Opcodes.NEWARRAY, 462, 10, 134, 628, 320, 479, 130, 739, 71, TarConstants.VERSION_OFFSET, 318, 374, 601, 192, 605, 142, 673, 687, LocTrafficSignType.LOC_TRAFFIC_SIGN_NO_STOPPING_AREA, 722, 384, Opcodes.RETURN, 752, 607, 640, RouteControlKey.RouteControlAimDriver, Opcodes.INSTANCEOF, 689, 707, 805, 641, 48, 60, 732, 621, 895, 544, 261, 852, 655, 309, 697, 755, 756, 60, LocTrafficSignType.LOC_TRAFFIC_SIGN_CUSTOMS, BLParams.RouteOverlayCompare, 434, 421, 726, BLParams.GuideOverlayTypeIntervalCamera, 503, 118, 49, 795, 32, 144, 500, 238, 836, 394, 280, 566, 319, 9, 647, MarkUtils.MARKER_ID_YONG_DU_RIGHT, 73, 914, 342, 126, 32, 681, LocTrafficSignType.LOC_TRAFFIC_SIGN_NON_MOTOR_VEHICLES, 792, 620, 60, 609, 441, Opcodes.GETFIELD, 791, 893, 754, 605, 383, LocTrafficSignType.LOC_TRAFFIC_SIGN_AXLE_WEIGTH_LIMIT, 749, 760, 213, 54, MarkUtils.MARKER_ID_TIE_2, 134, 54, 834, MarkUtils.MARKER_ID_INTERVAL_CAMERA_END, 922, Opcodes.ATHROW, 910, BLParams.GuideOverlayTypeMixForkInfo, 609, 829, Opcodes.ANEWARRAY, 20, 167, 29, 872, MarkUtils.MARKER_ID_DEBUG_DR, 83, 402, 41, 656, 505, 579, 481, Opcodes.LRETURN, 404, 251, 688, 95, MarkUtils.MARKER_ID_ROUTE_CHARGE_FOCUS_SELECT_LAST_REACHABLE, 555, 642, 543, 307, 159, 924, 558, 648, 55, MarkUtils.MARKER_ID_ROUTE_CHARGE_FOCUS_SELECT_LAST_REACHABLE, 10}, new int[]{352, 77, RouteControlKey.RouteControlKeySetTotalTime, 504, 35, 599, 428, 207, 409, 574, 118, MarkUtils.MARKER_ID_ROUTE_CHARGE_FOCUS_REACHABLE, MarkUtils.MARKER_ID_CAR_END, 380, LayerPriorityType.LayerPriorityCruiseEvent, MarkUtils.MARKER_ID_ROUTE_CHARGE_REACHABLE, Opcodes.MULTIANEWARRAY, SearchResultCode.G_ERR_TELEPHONE, 920, 155, 914, MarkUtils.MARKER_ID_INTERVAL_CAMERA_END, LocTrafficSignType.LOC_TRAFFIC_SIGN_STOP_AND_CHECK, 643, MarkUtils.MARKER_ID_CAR_NAVIGATION_3D, 871, 306, 88, 87, Opcodes.INSTANCEOF, 352, 781, 846, 75, LocTrafficSignType.LOC_TRAFFIC_SIGN_ROAD_DIVIDES, 520, 435, 543, 203, 666, 249, 346, 781, 621, 640, SearchResultCode.G_ERR_LOGIN_SUCCESS, 794, BLParams.GuideOverlayTypeAlternativePathLabel, 539, 781, SpeechNaviEvent.SPEECH_MAP_MODE_HEAD_UP_2D, 390, 644, 102, 476, MarkUtils.MARKER_ID_ROUTE_CHARGE_FOCUS_SELECT_REACHABLE, MarkUtils.MARKER_ID_RECOMMEND_PARK_FOCUS_1, 632, 545, 37, 858, 916, MarkUtils.MARKER_ID_YONG_DU_LEFT_UP, 41, 542, MarkUtils.MARKER_ID_RECOMMEND_PARK_3, 122, 272, 383, 800, MarkUtils.MARKER_ID_RECOMMEND_CHARGE_FREQUENT, 98, 752, 472, 761, 107, 784, 860, 658, 741, MarkUtils.MARKER_ID_RECOMMEND_PARK_FOCUS_1, 204, 681, 407, 855, 85, 99, 62, 482, Opcodes.GETFIELD, 20, MarkUtils.MARKER_ID_TIE_2, MarkUtils.MARKER_ID_DEBUG_DR_TRACE, 593, 913, 142, 808, 684, MarkUtils.MARKER_ID_RECOMMEND_PARK_1, 536, 561, 76, 653, 899, 729, 567, 744, 390, 513, 192, 516, 258, RouteChargeDecorator.TYPE_SELECTED_KEEPER, 518, 794, 395, 768, 848, 51, 610, 384, 168, Opcodes.ARRAYLENGTH, 826, LocTrafficSignType.LOC_TRAFFIC_SIGN_BUS_LANE, 596, 786, 303, 570, 381, 415, 641, 156, LocTrafficSignType.LOC_TRAFFIC_SIGN_MIN_SPEED_LIMIT, 151, 429, BLParams.GuideOverlayTypeBuilding, 207, 676, 710, 89, 168, 304, 402, 40, 708, 575, 162, 864, LocTrafficSignType.LOC_TRAFFIC_SIGN_STOP_AND_CHECK, 65, 861, 841, 512, 164, 477, LocTrafficSignType.LOC_TRAFFIC_SIGN_END_OF_NO_OVERTAKING, 92, MarkUtils.MARKER_ID_BUBBLE_PASSED_VIA_CHARGE, 785, MarkUtils.MARKER_ID_RECOMMEND_PARK_2, MarkUtils.MARKER_ID_BUBBLE_PASSED_FOCUSED_VIA, 850, 836, 827, 736, 707, 94, 8, MarkUtils.MARKER_ID_ROUTE_CHARGE_SELECT_LAST_REACHABLE, 114, 521, 2, MarkUtils.MARKER_ID_ROUTE_CHARGE_FOCUS_SELECT_REACHABLE, 851, 543, 152, 729, BLParams.RouteOverlayGuide, 95, 248, 361, 578, LocTrafficSignType.LOC_TRAFFIC_SIGN_STRAIGHT_RIGHT_TURN_LANE, 856, 797, MarkUtils.MARKER_ID_RECOMMEND_PARK_3, 51, 684, 466, BLParams.GuideOverlayTypeAllBoard, 820, 669, 45, 902, RouteControlKey.RouteControlLanguageCode, 167, 342, 244, Opcodes.LRETURN, 35, 463, 651, 51, 699, 591, RouteControlKey.RouteControlLanguageCode, 578, 37, 124, MarkUtils.MARKER_ID_INTERVAL_CAMERA_BEGIN, LocTrafficSignType.LOC_TRAFFIC_SIGN_NON_MOTOR_VEHICLES_LANE, MarkUtils.MARKER_ID_YONG_DU_LEFT_UP, 43, 427, 119, 662, BLParams.RouteOverlayTrafficJamLine, 475, 850, 764, 364, 578, 911, MarkUtils.MARKER_ID_SEARCH_CHARGE_FOCUS, 711, 472, 420, 245, MarkUtils.MARKER_ID_RECOMMEND_PARK_2, 594, 394, 511, LocTrafficSignType.LOC_TRAFFIC_SIGN_ROAD_DIVIDES, 589, BLParams.RouteOverlayTrafficJamLine, 699, 688, 43, SpeechNaviEvent.SPEECH_MAP_MODE_HEAD_UP_2D, 842, 383, 721, 521, 560, 644, 714, 559, 62, 145, 873, 663, 713, 159, 672, 729, 624, 59, Opcodes.INSTANCEOF, 417, 158, 209, 563, 564, 343, 693, 109, 608, 563, MarkUtils.MARKER_ID_COMPANY_NIGHT, Opcodes.PUTFIELD, BLParams.RouteOverlayRestrict, 677, 310, 248, 353, 708, SpeechNaviEvent.SPEECH_SWITCH_MAP_MODE, 579, 870, 617, 841, 632, 860, MarkUtils.MARKER_ID_RECOMMEND_PARK_3, 536, 35, BLParams.RouteOverlayTrafficJamLine, 618, 586, TypedValues.Cycle.TYPE_WAVE_OFFSET, 833, 77, 597, 346, SearchResultCode.G_ERR_NOLOGIN, 757, 632, 695, 751, LocTrafficSignType.LOC_TRAFFIC_SIGN_NON_MOTOR_VEHICLES, 247, Opcodes.INVOKESTATIC, 45, 787, 680, 18, 66, 407, MarkUtils.MARKER_ID_FAVOURITE_FOCUS_NIGHT, 54, MarkUtils.MARKER_ID_ROUTE_CHARGE_REACHABLE, LocTrafficSignType.LOC_TRAFFIC_SIGN_AXLE_WEIGTH_LIMIT, ConfigKey.ConfigKeyRealTrafficShare, 830, 922, MarkUtils.MARKER_ID_ROUTE_BOARDER_LINE_TEXTURE, BLParams.GuideOverlayTypePathBoard, 644, 905, 789, 420, 305, 441, 207, 300, 892, 827, 141, MarkUtils.MARKER_ID_LANE_GUIDE_TRAFFIC_LIGHT_ICON, 381, 662, 513, 56, 252, 341, 242, 797, 838, 837, 720, LocTrafficSignType.LOC_TRAFFIC_SIGN_NO_HONKING, 307, 631, 61, 87, 560, 310, 756, 665, 397, 808, 851, 309, 473, 795, RouteControlKey.RouteControlConfigSetTipsInfo, 31, 647, 915, 459, 806, 590, 731, TypedValues.Cycle.TYPE_WAVE_PHASE, 216, MarkUtils.MARKER_ID_LANE_TURN_MAX, 249, 321, 881, 699, BLParams.GuideOverlayTypeETAEvent, 673, 782, 210, 815, 905, 303, 843, 922, 281, 73, MarkUtils.MARKER_ID_CRUISE_TRAFFIC, 791, 660, 162, MarkUtils.MARKER_ID_ROUTE_CHARGE_FOCUS_REACHABLE, 308, 155, TypedValues.Cycle.TYPE_CUSTOM_WAVE_SHAPE, 907, 817, Opcodes.NEW, 62, 16, TypedValues.Cycle.TYPE_WAVE_PHASE, BLParams.GuideOverlayTypeETAEvent, LocTrafficSignType.LOC_TRAFFIC_SIGN_CARRIAGEWAY, MarkUtils.MARKER_ID_CAR_FLASH, MarkUtils.MARKER_ID_ROUTE_BOARDER_LINE_TEXTURE, RouteControlKey.RouteControlKeySetLongDistInfo, LZMA2Options.NICE_LEN_MAX, 610, MarkUtils.MARKER_ID_TIE_1, 183, 923, 116, 667, 751, 353, 62, MarkUtils.MARKER_ID_FAVOURITE, 691, 379, 687, 842, 37, MarkUtils.MARKER_ID_BUBBLE_PASSED_FOCUSED_VIA, 720, 742, 330, 5, 39, 923, 311, TypedValues.Cycle.TYPE_WAVE_OFFSET, 242, 749, 321, 54, 669, 316, 342, MarkUtils.MARKER_ID_INTERVAL_CAMERA_END, BLParams.GuideOverlayTypeAlternativePathLabel, 105, 667, MarkUtils.MARKER_ID_RECOMMEND_CHARGE_AROUND_SLOW, 640, 672, 576, 540, 316, MarkUtils.MARKER_ID_RECOMMEND_CHARGE_AROUND_XP, 721, 610, 46, 656, MarkUtils.MARKER_ID_SEARCH_AROUNT_POI_CENTER_NIGHT, Opcodes.LOOKUPSWITCH, 616, 464, Opcodes.ARRAYLENGTH, BLParams.GuideOverlayTypeBuilding, MarkUtils.MARKER_ID_TIE_2, 321, 762, 752, BLParams.GuideOverlayTypeAllBoard, Opcodes.DRETURN, 134, 14, 381, 433, 717, 45, 111, 20, 596, MarkUtils.MARKER_ID_CAR_DIRECTION_LIGHT, 736, 138, 646, 411, 877, 669, 141, 919, 45, 780, 407, 164, LocTrafficSignType.LOC_TRAFFIC_SIGN_NON_MOTOR_VEHICLES_LANE, 899, 165, 726, 600, LocTrafficSignType.LOC_TRAFFIC_SIGN_U_TURN_LANE, MarkUtils.MARKER_ID_ROUTE_CHARGE_FOCUS_REACHABLE, 655, MarkUtils.MARKER_ID_BUBBLE_PASSED_FOCUSED_VIA, 752, 768, LocTrafficSignType.LOC_TRAFFIC_SIGN_NO_PARKING, 849, 647, 63, 310, 863, 251, MarkUtils.MARKER_ID_FAVOURITE, 304, 282, 738, 675, SpeechNaviEvent.SPEECH_SWITCH_MAP_MODE, 389, 244, 31, 121, 303, TarConstants.VERSION_OFFSET}};

    private PDF417ErrorCorrection() {
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static int getErrorCorrectionCodewordCount(int i) {
        if (i < 0 || i > 8) {
            throw new IllegalArgumentException("Error correction level must be between 0 and 8!");
        }
        return 1 << (i + 1);
    }

    static int getRecommendedMinimumErrorCorrectionLevel(int i) throws WriterException {
        if (i > 0) {
            if (i <= 40) {
                return 2;
            }
            if (i <= 160) {
                return 3;
            }
            if (i <= 320) {
                return 4;
            }
            if (i <= 863) {
                return 5;
            }
            throw new WriterException("No recommendation possible");
        }
        throw new IllegalArgumentException("n must be > 0");
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static String generateErrorCorrection(CharSequence charSequence, int i) {
        int errorCorrectionCodewordCount = getErrorCorrectionCodewordCount(i);
        char[] cArr = new char[errorCorrectionCodewordCount];
        int length = charSequence.length();
        for (int i2 = 0; i2 < length; i2++) {
            int i3 = errorCorrectionCodewordCount - 1;
            int charAt = (charSequence.charAt(i2) + cArr[i3]) % PDF417Common.NUMBER_OF_CODEWORDS;
            while (i3 > 0) {
                cArr[i3] = (char) ((cArr[i3 - 1] + (929 - ((EC_COEFFICIENTS[i][i3] * charAt) % PDF417Common.NUMBER_OF_CODEWORDS))) % PDF417Common.NUMBER_OF_CODEWORDS);
                i3--;
            }
            cArr[0] = (char) ((929 - ((charAt * EC_COEFFICIENTS[i][0]) % PDF417Common.NUMBER_OF_CODEWORDS)) % PDF417Common.NUMBER_OF_CODEWORDS);
        }
        StringBuilder sb = new StringBuilder(errorCorrectionCodewordCount);
        for (int i4 = errorCorrectionCodewordCount - 1; i4 >= 0; i4--) {
            if (cArr[i4] != 0) {
                cArr[i4] = (char) (929 - cArr[i4]);
            }
            sb.append(cArr[i4]);
        }
        return sb.toString();
    }
}
